---
import "../styles/global.css";
import PersonalDetails, {
  type PersonalDetailsProps,
} from "../components/PersonalDetails.astro";
import { type SocialProps } from "../components/Social.astro";
import Section from "../components/Section.astro";
import Entry, { type EntryProps } from "../components/Entry.astro";
import {
  LanguageProficiency,
  type SkillProps,
} from "../components/Skill.astro";
import Skill, { Proficiency } from "../components/Skill.astro";

const personalDetails: PersonalDetailsProps = {
  firstName: "Sead",
  lastName: "MulahasanoviÄ‡",
  jobTitle: "Software Developer",
  phoneNumber: "+38762267917",
  emailAddress: "mulahasanovic@outlook.com",
  city: "Bugojno",
  country: "Bosnia and Herzegovina",
  personalWebsite: "sead.dev",
};
const skills: SkillProps<Proficiency>[] = [
  { label: "HTML", proficiency: 1 },
  { label: "CSS", proficiency: 2 },
  { label: "JavaScript", proficiency: 3 },
  { label: "TypeScript", proficiency: 4 },
  { label: "React", proficiency: Proficiency.Basic },
  { label: "Astro", proficiency: Proficiency.Intermediate },
  { label: "Writing Docs", proficiency: Proficiency.Advanced },
  {
    label:
      "Very long skills don't break alignment too much, but don't go overboard",
    proficiency: Proficiency.Expert,
  },
  {
    label: "You can also add skills without Proficiency level",
  },
];
const languages: SkillProps<LanguageProficiency>[] = [
  { label: "Bosnian", proficiency: LanguageProficiency.Native },
  { label: "English", proficiency: LanguageProficiency.Fluent },
];
const experiences = await Astro.glob<EntryProps>("../experiences/*.md");
const education = await Astro.glob<EntryProps>("../education/*.md");

const socials: SocialProps[] = [
  {
    platform: "twitter",
    username: "astrodotbuild",
  },
  {
    platform: "github",
    username: "withastro",
  },
  {
    platform: "youtube",
    username: "astrodotbuild",
  },
];

const pageTitle = `${personalDetails.firstName} ${personalDetails.lastName} | ${
  personalDetails.jobTitle
} | ${new Date().toLocaleDateString()} | Resume`;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
  </head>
  <body class="font-sans text-neutral-800 lg:p-12">
    <main
      class="mx-auto my-auto max-w-4xl space-y-14 shadow-2xl p-16 print:shadow-none print:p-0"
    >
      <PersonalDetails {...personalDetails} />

      <Section title="Summary">
        Full Stack Software Developer with a strong focus on details. Proactive
        and willing to learn new stuff. Worked with multiple technologies across
        different projects, including design, architecture, optimizations and
        user experience for almost a decade.
      </Section>

      <Section title="Experience">
        {
          experiences.map((exp) => (
            <Entry
              {...exp.frontmatter}
              compiledContent={exp.compiledContent()}
            />
          ))
        }
      </Section>

      <Section title="Internships" visible={false} />

      <Section title="Education">
        {
          education.map((edu) => (
            <Entry
              {...edu.frontmatter}
              compiledContent={edu.compiledContent()}
            />
          ))
        }
      </Section>

      <Section title="Skills">
        <ul class="md:columns-2 skills-list">
          {skills.map((skill) => <Skill {...skill} />)}
        </ul>
      </Section>

      <Section title="Languages">
        <ul class="md:columns-2 skills-list">
          {languages.map((lang) => <Skill {...lang} />)}
        </ul>
      </Section>
    </main>
  </body>
</html>
